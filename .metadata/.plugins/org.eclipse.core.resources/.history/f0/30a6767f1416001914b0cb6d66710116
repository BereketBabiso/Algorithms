package subsetsumDP;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class SubSetSumDP {
	
	private Map<Key, Boolean> map = new HashMap<>();
	private boolean result = false;
	
	public boolean subSetSum(List<Integer> set, int k) {
		System.out.println(">>>set : "+set);
	
		if(k<0) return false;
		if(k==0) return true;
		if(set.size()==1) {
			return set.get(0)==k;
		}
		int n = set.size() -1;
		int x = set.remove(n);
		if(subSetSum(set,k-x)) {
			System.out.println("right");
			return true;
		}
		return subSetSum(set,k);
		
		//return result;
		
	}

	public static void main(String[] args) {
		SubSetSumDP ss = new SubSetSumDP();
		List<Integer> list = new LinkedList<>();
		list.add(1);
		list.add(3);
		list.add(5);
		int k = 1;
			
		System.out.println(ss.subSetSum(list, k));

	}

}
